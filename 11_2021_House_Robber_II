/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    unordered_map<TreeNode*,int> lookUp;
    int rob(TreeNode* root) {
        if(root==NULL)
            return 0;
        TreeNode* key = root;
        if(lookUp.find(key)!=lookUp.end())
            return lookUp[key];
        int sum = root->val;
        if(root->left)
        {
            sum += rob(root->left->left);
            sum += rob(root->left->right);
        }
        if(root->right)
        {
            sum += rob(root->right->left);
            sum += rob(root->right->right);
        }
        int nextSum = rob(root->left) + rob(root->right);
        lookUp[key] = max(nextSum, sum);
        return lookUp[key];
    }
};
