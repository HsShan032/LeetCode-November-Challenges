/*
Data structure used - SET
Logic used: For a square the length of the side is same and the length of leading and trailing diagonal is same, so the set 
should contain only two values and if the three points are from origin, then, it should not be considered.  
*/

class Solution {
public:
    bool validSquare(vector<int>& p1, vector<int>& p2, vector<int>& p3, vector<int>& p4) {
        set<int> s;
        s.insert(add(p1,p2));
        s.insert(add(p1,p3));
        s.insert(add(p1,p4));
        s.insert(add(p2,p3));
        s.insert(add(p2,p4));
        s.insert(add(p3,p4));
        return s.find(0)==s.end() && s.size()==2;
    }
    int add(vector<int> &a, vector<int> &b){
        return ((a[0] - b[0]) * (a[0] - b[0])) + ((a[1] - b[1]) * (a[1] - b[1]));
    }
};
