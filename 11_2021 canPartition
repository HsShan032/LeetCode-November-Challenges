class Solution:
    def canPartition(self, nums: List[int]) -> bool:
        self.cache = set()
        def dfs(target,nums):
            if target < 0:
                return False
            if target == 0:
                return True
            if target in self.cache:
                return False
            self.cache.add(target)
            for i,val in enumerate(nums):
                if dfs(target-nums[i], nums[i+1:]) or dfs(target, nums[i+1:]):
                    return True
            return False
        sum_n = sum(nums)
        if sum_n%2 != 0:
            return False
        return dfs(sum_n//2,nums)
